.model small
.stack 100h
.data
    storage db  10 dup (?)

    ICW1    equ 00010001b ; Initialization Command Word 1  инициализации
    ICW2    equ 68h ; Базовый вектор для контроллера прерываний
    ICD2    equ 8h ;  Базовый вектор для контроллера прерываний
            ; (поумолчанию)
    ICW3    equ 00000100b ; указывает, к каким разрядам ведущего
            ; контроллера подключены ведомые.
    ICW4    equ 00000001b ; последнее слово инициализации
    smesh_1 equ 185h ; Смещение обработчика для таймера
    smesh_2 equ 20ah ; Смещение обработчика для клавиатуры
.code
start:
    mov ax, @data
    mov ds, ax

; Инициализация Master блока контроллера прерываний 

    cli         ; Запрет прерываний
    
    mov al, ICW1 
    out 20h, al  ; Загрузка управляющего слова
    jmp $+2     ; делаем маленькую задержку
    mov al, ICW2    ; Вывод в контроллер перываний базового векто-
    out 21h, al  ; ра прерывания 1101000.
    jmp $+2     ; делаем маленькую задержку
    mov al, ICW3    ; Вывод в контроллер разрядов подключения
    out 21h, al  ; каскадируемых контроллеров
    jmp $+2     ; делаем маленькую задержку
    mov al, ICW4    ; Вывод в контроллер последнего управляющего
    out 21h, al  ; слова.
    jmp $+2     ; делаем маленькую задержку

; Маскирование прерывания от таймера (OCW1)

    in  al, 21h
    or  al, 00000001b ;запретить прерывание уровня 0
    out 21h, al      

; Установка векторов прерываний для подпрограмм N1 и N2
    push    es      ; запомнить es
    xor ax, ax
    mov es, ax      ; обнулить es

    mov es:[4*ICW2], smesh_1 ; Заносим смещение обработчика
    mov es:[4*ICW2+2], cs   ;Заносим сегментную часть адреса обработчика

    mov es:[4*ICW2+4], smesh_2 ; Заносим смещение обработчика
    mov es:[4*ICW2+6],cs   ;Заносим сегментную часть адреса обработчика

    pop es      ;восстановить es

    sti         ; разрешение прерываний

; основная программа
    lea si, storage ; зaгpyзкa aдpeca для зaпиcи cкaн кoдa
    hlt         ; выxoд из cocтoяния ocтaнoвa пocлe нaжaтия
                ; любoй из клaвиш
    mov cx, 200h    ; cчeтчик чиcлa пpepывaний
    mov di, 360h    ; сброс маски для прерывания от таймера 
    in  al, 21h
    and al, 11111100b   ;разрешим прерывания от клавиатуры и от таймера
    out 21h, al
    jmp $+2     ; небольшая задержка
                                
main_loop:
    hlt         ; выxoд из cocтoяния ocтaнoвa пo пpepывaнию
    loop    main_loop   ; oт тaймepa или oт клaвиaтypы

    cli         ; запрещение прерываний

; Реинициализация Master блока контроллера прерываний 
; Все настройки по умолчанию

    mov al, ICW1
    out 20h, al  ; Загрузка управляющего слова
    jmp $+2     ; делаем маленькую задержку
    mov al, ICD2    ; Вывод в контроллер перываний базового векто-
    out 21h, al  ; ра прерывания поумолчанию.
    jmp $+2     ; делаем маленькую задержку
    mov al, ICW3    ; Вывод в контроллер разрядов подключения
    out 21h, al  ; каскадируемых контроллеров
    jmp $+2     ; делаем маленькую задержку
    mov al, ICW4    ; Вывод в контроллер последнего управляющего
    out 21h, al  ; слова.
    jmp $+2     ; делаем маленькую задержку

    sti

    mov ax, 4c00h   ; выход
    int 21h

; Обработчик прерываний от сигналов таймера 0.
; При выполнении программы осуществляется вывод на экран дисплея SCAN кода

org  smesh_1

    push    ax
    dec si
    mov ax, 0b800h  ; Начало видеопамяти для CGA, EGA, VGA в тексто-
                ; вом режиме 80x25 (монохромный дисплей - b000h)
    mov es, ax
    mov al, [si]
    mov ah, 41h     ; загрузка атрибута отображаемого знака -
                ; 37h-белый на синем            
    mov es:[di], ax
    add di, 4
    inc si
    mov al, 20h
    out [20h], al
    pop ax
iret

; Обработчик нажатия клавиши
org  smesh_2

    push    ax
    in  al, 60h   ; ввод scan кода;
    test    al, 80h     ; анализ нажатия или отжатия;
    jnz m2      ; переход, если клавиша отжата
    mov [si], al    ; сохранение scan кода в памяти
    inc si
    mov bh, al
m2: mov bl, al      ; сохранение scan кода в bx
    in  al, 61h   ;
    or  al, 80h     ;
    out 61h, al   ; установка разряда pb7 в "1"
    and al, 7fh
    out 61h, al   ; сброс разряда pb7 в "0"
    mov al, 20h
    out 20h, al  ; посылка контроллеру прерываний сигнала
                ; End-Of-Interrupt
    pop ax
iret

end start       
